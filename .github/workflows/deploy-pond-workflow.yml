name: build-and-deploy-local
# main ブランチへのPull Request と Merge をトリガーに指定
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE: slack-bot/github-actions-docker-build-with-cache

# 作業ディレクトリの指定
defaults:
  run:
    working-directory: ./

jobs:
  deploy:
    name: Deploy
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Save the sercret file
        run: envsubst < credential.envsubst.json  > credential.json
        env:
          NAME: ${{ secrets.NAME }}
          PASSWORD: ${{ secrets.VALUE }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2 # QEMUエミュレーションをセットアップ

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: create tag
        run: |
          SHA=${{ github.sha }}
          TAG=${IMAGE}:$(TZ=UTC-9 date '+%Y%m')-${SHA:0:7}
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            LATEST=${IMAGE}:latest
            echo "TAGS=$TAG,$LATEST" >> $GITHUB_ENV
          else
            echo "TAGS=$TAG" >> $GITHUB_ENV
          fi
          echo TAG $TAG

      # よく考えたら docker compose だけで buildまでしてくれるわ
      # - name: Build Docker Image
      #   run: |
      #     pwd &&
      #     ls &&
      #     docker build -t my-docker-image:latest -f ./docker/Dockerfile .
      #   working-directory: .

      - name: Deploy
        run: |
          docker compose up -d
